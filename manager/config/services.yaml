# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Model/User/Entity/User'
            - '../src/Model/Work/Entity/Members/Group'
            - '../src/Model/Work/Entity/Members/Member'

    App\Model\User\Entity\User\UserRepository: ~
    App\Model\Work\Entity\Members\Group\GroupRepository: ~
    App\Model\Work\Entity\Members\Member\MemberRepository: ~

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Finesse\SwiftMailerDefaultsPlugin\SwiftMailerDefaultsPlugin:
        arguments:
            $defaults:
                from:
                    '%env(MAILER_FROM_EMAIL)%': '%env(MAILER_FROM_NAME)%'
        tags:
            - { name: swiftmailer.default.plugin }

    App\Model\User\Service\ResetTokenizer:
        factory: 'App\Container\Model\User\Service\ResetTokenizerFactory::create'
        arguments: ['PT1H']

    Predis\Client:
        arguments:
            - '%env(REDIS_URL)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Predis\Client'

    App\Widget\:
        resource: '../src/Widget'
        tags: ['twig.extension']

    App\Twig\:
        resource: '../src/Twig'
        tags: [ 'twig.extension' ]

    App\Menu\SidebarMenu:
        tags:
            - {name: knp_menu.menu_builder, method: build, alias: sidebar}

    App\Menu\Work\Project\MainMenu:
        tags:
            - {name: knp_menu.menu_builder, method: build, alias: work_project}

    App\Menu\Work\ProjectsMenu:
        tags:
            - { name: knp_menu.menu_builder, method: build, alias: work_projects }

    App\Menu\Work\TasksMenu:
        tags:
            - { name: knp_menu.menu_builder, method: build, alias: work_tasks_presets }

    App\Menu\Work\MembersMenu:
        tags:
            - { name: knp_menu.menu_builder, method: build, alias: work_members }

    App\Menu\Work\Project\SettingsMenu:
        tags:
            - { name: knp_menu.menu_builder, method: build, alias: work_project_menu }

    twig.extension.stringloader:
        class: Twig\Extension\StringLoaderExtension
        tags:
            - { name: twig.extension }